// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ventas.EF.Context;

namespace Ventas.EF.Migrations
{
    [DbContext(typeof(VentasContext))]
    [Migration("20190326061248_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ventas.Core.Models.Venta", b =>
                {
                    b.Property<int>("ID_Venta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Descuento");

                    b.Property<DateTime>("FechaVenta");

                    b.Property<int>("ID_Cliente");

                    b.Property<int>("ID_UsuarioAlta");

                    b.Property<int>("ID_UsuarioCambio");

                    b.Property<decimal>("Importe");

                    b.Property<decimal>("Impuesto");

                    b.Property<DateTime>("RegistroAlta");

                    b.Property<DateTime>("RegistroCambio");

                    b.Property<decimal>("SubTotal");

                    b.Property<decimal>("Total");

                    b.Property<Guid>("UUID");

                    b.HasKey("ID_Venta");

                    b.ToTable("Ventas","Ventas");
                });

            modelBuilder.Entity("Ventas.Core.Models.VentaDetalle", b =>
                {
                    b.Property<int>("ID_VentaDetalle");

                    b.Property<decimal>("Cantidad");

                    b.Property<decimal>("CostoUnitario");

                    b.Property<decimal>("Descuento");

                    b.Property<decimal>("ID_Impuesto");

                    b.Property<int>("ID_UsuarioAlta");

                    b.Property<int>("ID_UsuarioCambio");

                    b.Property<int>("ID_Venta");

                    b.Property<decimal>("Importe");

                    b.Property<decimal>("Impuesto");

                    b.Property<DateTime>("RegistroAlta");

                    b.Property<DateTime>("RegistroCambio");

                    b.Property<decimal>("SubTotal");

                    b.Property<decimal>("Total");

                    b.Property<Guid>("UUID");

                    b.HasKey("ID_VentaDetalle");

                    b.ToTable("VentasDetalles","VentasDetalles");
                });

            modelBuilder.Entity("Ventas.Core.Models.VentaPago", b =>
                {
                    b.Property<int>("ID_VentaPago");

                    b.Property<int>("ID_FormaPago");

                    b.Property<int>("ID_UsuarioAlta");

                    b.Property<int>("ID_UsuarioCambio");

                    b.Property<int>("ID_Venta");

                    b.Property<decimal>("Importe");

                    b.Property<DateTime>("RegistroAlta");

                    b.Property<DateTime>("RegistroCambio");

                    b.Property<Guid>("UUID");

                    b.HasKey("ID_VentaPago");

                    b.ToTable("VentasPagos","VentasPagos");
                });

            modelBuilder.Entity("Ventas.Core.Models.VentaDetalle", b =>
                {
                    b.HasOne("Ventas.Core.Models.Venta", "Venta")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("ID_VentaDetalle")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Ventas.Core.Models.VentaPago", b =>
                {
                    b.HasOne("Ventas.Core.Models.Venta", "Venta")
                        .WithMany("VentasPagos")
                        .HasForeignKey("ID_VentaPago")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
